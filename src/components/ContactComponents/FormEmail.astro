---
interface Props {
  placeholderTitle: string;
  placeholderText: string;
}

const { placeholderTitle, placeholderText } = Astro.props as Props;
---

<form id="formContact" class="flex flex-col gap-y-5 font-LexendDeca">
  <div class="flex flex-col gap-2">
    <input
      type="text"
      id="email"
      name="email"
      class="bg-slate-800 p-3 rounded-lg"
      placeholder={placeholderTitle}
    />
    <div id="emailErrorText" class="ml-2 hidden text-red-600 italic"></div>
    <div id="emailSuccessText" class="ml-2 hidden text-green-600 italic"></div>
  </div>
  <div class="flex flex-col gap-2">
    <textarea
      id="body"
      name="body"
      class="bg-slate-800 resize-none p-3 rounded-lg"
      cols="30"
      rows="10"
      placeholder={placeholderText}></textarea>
    <div id="bodyErrorText" class="ml-2 hidden text-red-600 italic"></div>
  </div>

  <button class="glitch mx-auto w-36 font-mono" type="submit">Enviar</button>
 
</form>

<script>
  import emailjs from "@emailjs/browser";
  emailjs.init("nd6SvexPJZzxaR7lN");

  const form = document.getElementById("formContact");

  form?.addEventListener("submit", (event) => {
    event.preventDefault();
    const email = document.getElementById("email") as HTMLInputElement;
    const body = document.getElementById("body") as HTMLTextAreaElement;
    const errorEmailElem = document.getElementById(
      "emailErrorText"
    ) as HTMLElement;
    const successEmailElem = document.getElementById(
      "emailSuccessText"
    ) as HTMLElement;
    const errorBodyElem = document.getElementById(
      "bodyErrorText"
    ) as HTMLElement;

    errorEmailElem.classList.add("hidden");
    errorBodyElem.classList.add("hidden");
    successEmailElem.classList.add("hidden");

    let isError = false;

    if (email?.value === "") {
      errorEmailElem.classList.remove("hidden");
      errorEmailElem.innerText = "*Este campo no puede estar vacio";
      isError = true;
    }

    if (body?.value === "") {
      errorBodyElem.classList.remove("hidden");
      errorBodyElem.innerText = "*Este campo no puede estar vacio";
      isError = true;
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const isValidEmail = emailRegex.test(email?.value);

    if (!isValidEmail && email?.value !== "") {
      errorEmailElem.classList.remove("hidden");
      errorEmailElem.innerText = "*El email tiene un formato no v√°lido";
      isError = true;
    }

    if (!isError) {
      emailjs
        .sendForm("default_service", "template_pnslx4a", "#formContact")
        .then(
          function (response) {
            successEmailElem.classList.remove("hidden");
            successEmailElem.innerText = "El mensaje se ha enviado correctamente";
            email.value = ""
            body.value = ""
          },
          function (error) {
            errorEmailElem.innerText = "El mensaje no se ha podido enviar"
          }
        );
    }
  });
</script>

<style>
  .glitch,
  .glitch::after {
    padding: 16px 20px;
    font-size: 18px;
    background: linear-gradient(45deg, transparent 5%, #1e293b 5%);
    border: 0;
    color: #fff;
    letter-spacing: 3px;
    line-height: 1;
    box-shadow: 6px 0px 0px #2f3f57;
    outline: transparent;
    position: relative;
  }

  .glitch::after {
    --slice-0: inset(50% 50% 50% 50%);
    --slice-1: inset(80% -6px 0 0);
    --slice-2: inset(50% -6px 30% 0);
    --slice-3: inset(10% -6px 85% 0);
    --slice-4: inset(40% -6px 43% 0);
    --slice-5: inset(80% -6px 5% 0);
    content: "H A C K E D";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent 3%,
      #1e293b 3%,
      #1e293b 5%,
      #556c8f 5%
    );
    text-shadow: -3px -3px 0px #f8f005, 3px 3px 0px #00e6f6;
    clip-path: var(--slice-0);
  }

  .glitch:hover::after {
    animation: 1s glitch;
    animation-timing-function: steps(2, end);
  }

  @keyframes glitch {
    0% {
      clip-path: var(--slice-1);
      transform: translate(-20px, -10px);
    }

    10% {
      clip-path: var(--slice-3);
      transform: translate(10px, 10px);
    }

    20% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 10px);
    }

    30% {
      clip-path: var(--slice-3);
      transform: translate(0px, 5px);
    }

    40% {
      clip-path: var(--slice-2);
      transform: translate(-5px, 0px);
    }

    50% {
      clip-path: var(--slice-3);
      transform: translate(5px, 0px);
    }

    60% {
      clip-path: var(--slice-4);
      transform: translate(5px, 10px);
    }

    70% {
      clip-path: var(--slice-2);
      transform: translate(-10px, 10px);
    }

    80% {
      clip-path: var(--slice-5);
      transform: translate(20px, -10px);
    }

    90% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 0px);
    }

    100% {
      clip-path: var(--slice-1);
      transform: translate(0);
    }
  }
</style>